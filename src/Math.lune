export
  square, cube, sqrt, cbrt,
  exp, (**), log, logBase,
  pi, tau,
  type angle, radians, degrees, turns,
  sin, cos, tan, asin, acos, atan, atan2,
  sinh, cosh, tanh, asinh, acosh, atanh,
  hypot, distance

import Prelude open

infix ** right 70

val square, cube :: any x. num x -> num x
let square x = x * x
let cube x = x * x * x

foreign sqrt, cbrt :: float -> float

foreign exp :: float -> float
foreign (**) :: float -> float -> float

foreign log :: float -> float

val logBase :: float -> float -> float
let logBase x y = log y / log x

foreign pi :: float

val tau :: float
let tau = pi * 2

type angle = float

val radians, degrees, turns :: float -> angle
let radians x = x
let degrees x = x * tau / 360
let turns x = x * tau

foreign sin, cos, tan :: angle -> float

foreign asin, acos, atan :: float -> angle

foreign atan2 :: float -> float -> angle

foreign sinh, cosh, tanh :: angle -> float

foreign asinh, acosh, atanh :: float -> angle

foreign hypot :: float -> float -> float

val distance :: float -> float -> float -> float -> float
let distance x1 y1 x2 y2 = hypot (x2 ~ x1) (y2 ~ y1)
